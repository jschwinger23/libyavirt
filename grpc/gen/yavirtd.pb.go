// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.12.3
// source: grpc/gen/yavirtd.proto

package yavpb

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_gen_yavirtd_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_gen_yavirtd_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_grpc_gen_yavirtd_proto_rawDescGZIP(), []int{0}
}

type CaptureGuestOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *CaptureGuestOptions) Reset() {
	*x = CaptureGuestOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_gen_yavirtd_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CaptureGuestOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CaptureGuestOptions) ProtoMessage() {}

func (x *CaptureGuestOptions) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_gen_yavirtd_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CaptureGuestOptions.ProtoReflect.Descriptor instead.
func (*CaptureGuestOptions) Descriptor() ([]byte, []int) {
	return file_grpc_gen_yavirtd_proto_rawDescGZIP(), []int{1}
}

func (x *CaptureGuestOptions) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CaptureGuestOptions) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type UserImageMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name          string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Distro        string `protobuf:"bytes,2,opt,name=distro,proto3" json:"distro,omitempty"`
	LatestVersion int64  `protobuf:"varint,3,opt,name=latest_version,json=latestVersion,proto3" json:"latest_version,omitempty"`
	Size          int64  `protobuf:"varint,4,opt,name=size,proto3" json:"size,omitempty"`
}

func (x *UserImageMessage) Reset() {
	*x = UserImageMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_gen_yavirtd_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserImageMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserImageMessage) ProtoMessage() {}

func (x *UserImageMessage) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_gen_yavirtd_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserImageMessage.ProtoReflect.Descriptor instead.
func (*UserImageMessage) Descriptor() ([]byte, []int) {
	return file_grpc_gen_yavirtd_proto_rawDescGZIP(), []int{2}
}

func (x *UserImageMessage) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UserImageMessage) GetDistro() string {
	if x != nil {
		return x.Distro
	}
	return ""
}

func (x *UserImageMessage) GetLatestVersion() int64 {
	if x != nil {
		return x.LatestVersion
	}
	return 0
}

func (x *UserImageMessage) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

type PingMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version string `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *PingMessage) Reset() {
	*x = PingMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_gen_yavirtd_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PingMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingMessage) ProtoMessage() {}

func (x *PingMessage) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_gen_yavirtd_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingMessage.ProtoReflect.Descriptor instead.
func (*PingMessage) Descriptor() ([]byte, []int) {
	return file_grpc_gen_yavirtd_proto_rawDescGZIP(), []int{3}
}

func (x *PingMessage) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

type InfoMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Cpu     int64  `protobuf:"varint,2,opt,name=cpu,proto3" json:"cpu,omitempty"`
	Memory  int64  `protobuf:"varint,3,opt,name=memory,proto3" json:"memory,omitempty"`
	Storage int64  `protobuf:"varint,4,opt,name=storage,proto3" json:"storage,omitempty"`
}

func (x *InfoMessage) Reset() {
	*x = InfoMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_gen_yavirtd_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InfoMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InfoMessage) ProtoMessage() {}

func (x *InfoMessage) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_gen_yavirtd_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InfoMessage.ProtoReflect.Descriptor instead.
func (*InfoMessage) Descriptor() ([]byte, []int) {
	return file_grpc_gen_yavirtd_proto_rawDescGZIP(), []int{4}
}

func (x *InfoMessage) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *InfoMessage) GetCpu() int64 {
	if x != nil {
		return x.Cpu
	}
	return 0
}

func (x *InfoMessage) GetMemory() int64 {
	if x != nil {
		return x.Memory
	}
	return 0
}

func (x *InfoMessage) GetStorage() int64 {
	if x != nil {
		return x.Storage
	}
	return 0
}

type GetGuestOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetGuestOptions) Reset() {
	*x = GetGuestOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_gen_yavirtd_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGuestOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGuestOptions) ProtoMessage() {}

func (x *GetGuestOptions) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_gen_yavirtd_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGuestOptions.ProtoReflect.Descriptor instead.
func (*GetGuestOptions) Descriptor() ([]byte, []int) {
	return file_grpc_gen_yavirtd_proto_rawDescGZIP(), []int{5}
}

func (x *GetGuestOptions) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetGuestMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string            `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Status        string            `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	TransitStatus string            `protobuf:"bytes,3,opt,name=transit_status,json=transitStatus,proto3" json:"transit_status,omitempty"`
	CreateTime    int64             `protobuf:"varint,4,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	TransitTime   int64             `protobuf:"varint,5,opt,name=transit_time,json=transitTime,proto3" json:"transit_time,omitempty"`
	UpdateTime    int64             `protobuf:"varint,6,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	Cpu           int64             `protobuf:"varint,7,opt,name=cpu,proto3" json:"cpu,omitempty"`
	Memory        int64             `protobuf:"varint,8,opt,name=memory,proto3" json:"memory,omitempty"`
	Storage       int64             `protobuf:"varint,9,opt,name=storage,proto3" json:"storage,omitempty"`
	ImageId       int64             `protobuf:"varint,10,opt,name=image_id,json=imageId,proto3" json:"image_id,omitempty"`
	ImageName     string            `protobuf:"bytes,11,opt,name=image_name,json=imageName,proto3" json:"image_name,omitempty"`
	Networks      map[string]string `protobuf:"bytes,12,rep,name=networks,proto3" json:"networks,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *GetGuestMessage) Reset() {
	*x = GetGuestMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_gen_yavirtd_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGuestMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGuestMessage) ProtoMessage() {}

func (x *GetGuestMessage) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_gen_yavirtd_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGuestMessage.ProtoReflect.Descriptor instead.
func (*GetGuestMessage) Descriptor() ([]byte, []int) {
	return file_grpc_gen_yavirtd_proto_rawDescGZIP(), []int{6}
}

func (x *GetGuestMessage) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetGuestMessage) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *GetGuestMessage) GetTransitStatus() string {
	if x != nil {
		return x.TransitStatus
	}
	return ""
}

func (x *GetGuestMessage) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *GetGuestMessage) GetTransitTime() int64 {
	if x != nil {
		return x.TransitTime
	}
	return 0
}

func (x *GetGuestMessage) GetUpdateTime() int64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

func (x *GetGuestMessage) GetCpu() int64 {
	if x != nil {
		return x.Cpu
	}
	return 0
}

func (x *GetGuestMessage) GetMemory() int64 {
	if x != nil {
		return x.Memory
	}
	return 0
}

func (x *GetGuestMessage) GetStorage() int64 {
	if x != nil {
		return x.Storage
	}
	return 0
}

func (x *GetGuestMessage) GetImageId() int64 {
	if x != nil {
		return x.ImageId
	}
	return 0
}

func (x *GetGuestMessage) GetImageName() string {
	if x != nil {
		return x.ImageName
	}
	return ""
}

func (x *GetGuestMessage) GetNetworks() map[string]string {
	if x != nil {
		return x.Networks
	}
	return nil
}

type GetGuestUUIDMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
}

func (x *GetGuestUUIDMessage) Reset() {
	*x = GetGuestUUIDMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_gen_yavirtd_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGuestUUIDMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGuestUUIDMessage) ProtoMessage() {}

func (x *GetGuestUUIDMessage) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_gen_yavirtd_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGuestUUIDMessage.ProtoReflect.Descriptor instead.
func (*GetGuestUUIDMessage) Descriptor() ([]byte, []int) {
	return file_grpc_gen_yavirtd_proto_rawDescGZIP(), []int{7}
}

func (x *GetGuestUUIDMessage) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type CreateGuestOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cpu       int64             `protobuf:"varint,1,opt,name=cpu,proto3" json:"cpu,omitempty"`
	Memory    int64             `protobuf:"varint,2,opt,name=memory,proto3" json:"memory,omitempty"`
	ImageName string            `protobuf:"bytes,3,opt,name=image_name,json=imageName,proto3" json:"image_name,omitempty"`
	Volumes   map[string]int64  `protobuf:"bytes,4,rep,name=volumes,proto3" json:"volumes,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	DmiUuid   string            `protobuf:"bytes,5,opt,name=dmi_uuid,json=dmiUuid,proto3" json:"dmi_uuid,omitempty"`
	Labels    map[string]string `protobuf:"bytes,6,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *CreateGuestOptions) Reset() {
	*x = CreateGuestOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_gen_yavirtd_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateGuestOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGuestOptions) ProtoMessage() {}

func (x *CreateGuestOptions) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_gen_yavirtd_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGuestOptions.ProtoReflect.Descriptor instead.
func (*CreateGuestOptions) Descriptor() ([]byte, []int) {
	return file_grpc_gen_yavirtd_proto_rawDescGZIP(), []int{8}
}

func (x *CreateGuestOptions) GetCpu() int64 {
	if x != nil {
		return x.Cpu
	}
	return 0
}

func (x *CreateGuestOptions) GetMemory() int64 {
	if x != nil {
		return x.Memory
	}
	return 0
}

func (x *CreateGuestOptions) GetImageName() string {
	if x != nil {
		return x.ImageName
	}
	return ""
}

func (x *CreateGuestOptions) GetVolumes() map[string]int64 {
	if x != nil {
		return x.Volumes
	}
	return nil
}

func (x *CreateGuestOptions) GetDmiUuid() string {
	if x != nil {
		return x.DmiUuid
	}
	return ""
}

func (x *CreateGuestOptions) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

type ResizeGuestOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      string           `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Cpu     int64            `protobuf:"varint,2,opt,name=cpu,proto3" json:"cpu,omitempty"`
	Memory  int64            `protobuf:"varint,3,opt,name=memory,proto3" json:"memory,omitempty"`
	Volumes map[string]int64 `protobuf:"bytes,4,rep,name=volumes,proto3" json:"volumes,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *ResizeGuestOptions) Reset() {
	*x = ResizeGuestOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_gen_yavirtd_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResizeGuestOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResizeGuestOptions) ProtoMessage() {}

func (x *ResizeGuestOptions) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_gen_yavirtd_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResizeGuestOptions.ProtoReflect.Descriptor instead.
func (*ResizeGuestOptions) Descriptor() ([]byte, []int) {
	return file_grpc_gen_yavirtd_proto_rawDescGZIP(), []int{9}
}

func (x *ResizeGuestOptions) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ResizeGuestOptions) GetCpu() int64 {
	if x != nil {
		return x.Cpu
	}
	return 0
}

func (x *ResizeGuestOptions) GetMemory() int64 {
	if x != nil {
		return x.Memory
	}
	return 0
}

func (x *ResizeGuestOptions) GetVolumes() map[string]int64 {
	if x != nil {
		return x.Volumes
	}
	return nil
}

type CreateGuestMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string            `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Status        string            `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	TransitStatus string            `protobuf:"bytes,3,opt,name=transit_status,json=transitStatus,proto3" json:"transit_status,omitempty"`
	CreateTime    int64             `protobuf:"varint,4,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	TransitTime   int64             `protobuf:"varint,5,opt,name=transit_time,json=transitTime,proto3" json:"transit_time,omitempty"`
	UpdateTime    int64             `protobuf:"varint,6,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	Cpu           int64             `protobuf:"varint,7,opt,name=cpu,proto3" json:"cpu,omitempty"`
	Memory        int64             `protobuf:"varint,8,opt,name=memory,proto3" json:"memory,omitempty"`
	Storage       int64             `protobuf:"varint,9,opt,name=storage,proto3" json:"storage,omitempty"`
	ImageId       int64             `protobuf:"varint,10,opt,name=image_id,json=imageId,proto3" json:"image_id,omitempty"`
	ImageName     string            `protobuf:"bytes,11,opt,name=image_name,json=imageName,proto3" json:"image_name,omitempty"`
	Networks      map[string]string `protobuf:"bytes,12,rep,name=networks,proto3" json:"networks,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *CreateGuestMessage) Reset() {
	*x = CreateGuestMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_gen_yavirtd_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateGuestMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGuestMessage) ProtoMessage() {}

func (x *CreateGuestMessage) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_gen_yavirtd_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGuestMessage.ProtoReflect.Descriptor instead.
func (*CreateGuestMessage) Descriptor() ([]byte, []int) {
	return file_grpc_gen_yavirtd_proto_rawDescGZIP(), []int{10}
}

func (x *CreateGuestMessage) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CreateGuestMessage) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *CreateGuestMessage) GetTransitStatus() string {
	if x != nil {
		return x.TransitStatus
	}
	return ""
}

func (x *CreateGuestMessage) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *CreateGuestMessage) GetTransitTime() int64 {
	if x != nil {
		return x.TransitTime
	}
	return 0
}

func (x *CreateGuestMessage) GetUpdateTime() int64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

func (x *CreateGuestMessage) GetCpu() int64 {
	if x != nil {
		return x.Cpu
	}
	return 0
}

func (x *CreateGuestMessage) GetMemory() int64 {
	if x != nil {
		return x.Memory
	}
	return 0
}

func (x *CreateGuestMessage) GetStorage() int64 {
	if x != nil {
		return x.Storage
	}
	return 0
}

func (x *CreateGuestMessage) GetImageId() int64 {
	if x != nil {
		return x.ImageId
	}
	return 0
}

func (x *CreateGuestMessage) GetImageName() string {
	if x != nil {
		return x.ImageName
	}
	return ""
}

func (x *CreateGuestMessage) GetNetworks() map[string]string {
	if x != nil {
		return x.Networks
	}
	return nil
}

type ControlGuestOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Operation string `protobuf:"bytes,2,opt,name=operation,proto3" json:"operation,omitempty"`
	Force     bool   `protobuf:"varint,3,opt,name=force,proto3" json:"force,omitempty"`
}

func (x *ControlGuestOptions) Reset() {
	*x = ControlGuestOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_gen_yavirtd_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ControlGuestOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ControlGuestOptions) ProtoMessage() {}

func (x *ControlGuestOptions) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_gen_yavirtd_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ControlGuestOptions.ProtoReflect.Descriptor instead.
func (*ControlGuestOptions) Descriptor() ([]byte, []int) {
	return file_grpc_gen_yavirtd_proto_rawDescGZIP(), []int{11}
}

func (x *ControlGuestOptions) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ControlGuestOptions) GetOperation() string {
	if x != nil {
		return x.Operation
	}
	return ""
}

func (x *ControlGuestOptions) GetForce() bool {
	if x != nil {
		return x.Force
	}
	return false
}

type ControlGuestMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Msg string `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *ControlGuestMessage) Reset() {
	*x = ControlGuestMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_gen_yavirtd_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ControlGuestMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ControlGuestMessage) ProtoMessage() {}

func (x *ControlGuestMessage) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_gen_yavirtd_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ControlGuestMessage.ProtoReflect.Descriptor instead.
func (*ControlGuestMessage) Descriptor() ([]byte, []int) {
	return file_grpc_gen_yavirtd_proto_rawDescGZIP(), []int{12}
}

func (x *ControlGuestMessage) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type AttachGuestOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ReplCmd  []byte   `protobuf:"bytes,2,opt,name=repl_cmd,json=replCmd,proto3" json:"repl_cmd,omitempty"`
	Force    bool     `protobuf:"varint,3,opt,name=force,proto3" json:"force,omitempty"`
	Safe     bool     `protobuf:"varint,4,opt,name=safe,proto3" json:"safe,omitempty"`
	Commands []string `protobuf:"bytes,5,rep,name=commands,proto3" json:"commands,omitempty"`
}

func (x *AttachGuestOptions) Reset() {
	*x = AttachGuestOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_gen_yavirtd_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AttachGuestOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttachGuestOptions) ProtoMessage() {}

func (x *AttachGuestOptions) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_gen_yavirtd_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttachGuestOptions.ProtoReflect.Descriptor instead.
func (*AttachGuestOptions) Descriptor() ([]byte, []int) {
	return file_grpc_gen_yavirtd_proto_rawDescGZIP(), []int{13}
}

func (x *AttachGuestOptions) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AttachGuestOptions) GetReplCmd() []byte {
	if x != nil {
		return x.ReplCmd
	}
	return nil
}

func (x *AttachGuestOptions) GetForce() bool {
	if x != nil {
		return x.Force
	}
	return false
}

func (x *AttachGuestOptions) GetSafe() bool {
	if x != nil {
		return x.Safe
	}
	return false
}

func (x *AttachGuestOptions) GetCommands() []string {
	if x != nil {
		return x.Commands
	}
	return nil
}

type AttachGuestMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Data []byte `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *AttachGuestMessage) Reset() {
	*x = AttachGuestMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_gen_yavirtd_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AttachGuestMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttachGuestMessage) ProtoMessage() {}

func (x *AttachGuestMessage) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_gen_yavirtd_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttachGuestMessage.ProtoReflect.Descriptor instead.
func (*AttachGuestMessage) Descriptor() ([]byte, []int) {
	return file_grpc_gen_yavirtd_proto_rawDescGZIP(), []int{14}
}

func (x *AttachGuestMessage) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AttachGuestMessage) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type ExecuteGuestOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Commands []string `protobuf:"bytes,2,rep,name=commands,proto3" json:"commands,omitempty"`
}

func (x *ExecuteGuestOptions) Reset() {
	*x = ExecuteGuestOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_gen_yavirtd_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecuteGuestOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteGuestOptions) ProtoMessage() {}

func (x *ExecuteGuestOptions) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_gen_yavirtd_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecuteGuestOptions.ProtoReflect.Descriptor instead.
func (*ExecuteGuestOptions) Descriptor() ([]byte, []int) {
	return file_grpc_gen_yavirtd_proto_rawDescGZIP(), []int{15}
}

func (x *ExecuteGuestOptions) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ExecuteGuestOptions) GetCommands() []string {
	if x != nil {
		return x.Commands
	}
	return nil
}

type ExecuteGuestMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Data     []byte `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	ExitCode int64  `protobuf:"varint,3,opt,name=exit_code,json=exitCode,proto3" json:"exit_code,omitempty"`
}

func (x *ExecuteGuestMessage) Reset() {
	*x = ExecuteGuestMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_gen_yavirtd_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecuteGuestMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteGuestMessage) ProtoMessage() {}

func (x *ExecuteGuestMessage) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_gen_yavirtd_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecuteGuestMessage.ProtoReflect.Descriptor instead.
func (*ExecuteGuestMessage) Descriptor() ([]byte, []int) {
	return file_grpc_gen_yavirtd_proto_rawDescGZIP(), []int{16}
}

func (x *ExecuteGuestMessage) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ExecuteGuestMessage) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ExecuteGuestMessage) GetExitCode() int64 {
	if x != nil {
		return x.ExitCode
	}
	return 0
}

var File_grpc_gen_yavirtd_proto protoreflect.FileDescriptor

var file_grpc_gen_yavirtd_proto_rawDesc = []byte{
	0x0a, 0x16, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x79, 0x61, 0x76, 0x69, 0x72,
	0x74, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x79, 0x61, 0x76, 0x70, 0x62, 0x22,
	0x07, 0x0a, 0x05, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x39, 0x0a, 0x13, 0x43, 0x61, 0x70, 0x74,
	0x75, 0x72, 0x65, 0x47, 0x75, 0x65, 0x73, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x22, 0x79, 0x0a, 0x10, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x64,
	0x69, 0x73, 0x74, 0x72, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x69, 0x73,
	0x74, 0x72, 0x6f, 0x12, 0x25, 0x0a, 0x0e, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x6c, 0x61, 0x74,
	0x65, 0x73, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69,
	0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x22, 0x27,
	0x0a, 0x0b, 0x50, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x61, 0x0a, 0x0b, 0x49, 0x6e, 0x66, 0x6f, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x70, 0x75, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x03, 0x63, 0x70, 0x75, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x6d, 0x6f,
	0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79,
	0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x22, 0x21, 0x0a, 0x0f, 0x47, 0x65,
	0x74, 0x47, 0x75, 0x65, 0x73, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0xc2, 0x03,
	0x0a, 0x0f, 0x47, 0x65, 0x74, 0x47, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x69, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x70, 0x75, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x03, 0x63, 0x70, 0x75, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72,
	0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x12,
	0x18, 0x0a, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x40, 0x0a, 0x08, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x18,
	0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x79, 0x61, 0x76, 0x70, 0x62, 0x2e, 0x47, 0x65,
	0x74, 0x47, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x4e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x6e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x73, 0x1a, 0x3b, 0x0a, 0x0d, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x22, 0x29, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x47, 0x75, 0x65, 0x73, 0x74, 0x55, 0x55,
	0x49, 0x44, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x22, 0xf0, 0x02,
	0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x75, 0x65, 0x73, 0x74, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x70, 0x75, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x03, 0x63, 0x70, 0x75, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x12, 0x1d,
	0x0a, 0x0a, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x40, 0x0a,
	0x07, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26,
	0x2e, 0x79, 0x61, 0x76, 0x70, 0x62, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x75, 0x65,
	0x73, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x73, 0x12,
	0x19, 0x0a, 0x08, 0x64, 0x6d, 0x69, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x64, 0x6d, 0x69, 0x55, 0x75, 0x69, 0x64, 0x12, 0x3d, 0x0a, 0x06, 0x6c, 0x61,
	0x62, 0x65, 0x6c, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x79, 0x61, 0x76,
	0x70, 0x62, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x75, 0x65, 0x73, 0x74, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x1a, 0x3a, 0x0a, 0x0c, 0x56, 0x6f, 0x6c,
	0x75, 0x6d, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x39, 0x0a, 0x0b, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0xcc, 0x01, 0x0a, 0x12, 0x52, 0x65, 0x73, 0x69, 0x7a, 0x65, 0x47, 0x75, 0x65, 0x73, 0x74,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x70, 0x75, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x63, 0x70, 0x75, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x6d,
	0x6f, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72,
	0x79, 0x12, 0x40, 0x0a, 0x07, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x26, 0x2e, 0x79, 0x61, 0x76, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x69, 0x7a,
	0x65, 0x47, 0x75, 0x65, 0x73, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x56, 0x6f,
	0x6c, 0x75, 0x6d, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x76, 0x6f, 0x6c, 0x75,
	0x6d, 0x65, 0x73, 0x1a, 0x3a, 0x0a, 0x0c, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22,
	0xc8, 0x03, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x75, 0x65, 0x73, 0x74, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x25,
	0x0a, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69,
	0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x69, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x70,
	0x75, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x63, 0x70, 0x75, 0x12, 0x16, 0x0a, 0x06,
	0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6d, 0x65,
	0x6d, 0x6f, 0x72, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x12, 0x19,
	0x0a, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69,
	0x6d, 0x61, 0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x43, 0x0a, 0x08, 0x6e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x79, 0x61, 0x76,
	0x70, 0x62, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x08, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x1a, 0x3b, 0x0a,
	0x0d, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x59, 0x0a, 0x13, 0x43, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x47, 0x75, 0x65, 0x73, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x14, 0x0a, 0x05, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05,
	0x66, 0x6f, 0x72, 0x63, 0x65, 0x22, 0x27, 0x0a, 0x13, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x47, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x6d, 0x73, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x85,
	0x01, 0x0a, 0x12, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x47, 0x75, 0x65, 0x73, 0x74, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x65, 0x70, 0x6c, 0x5f, 0x63, 0x6d,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x72, 0x65, 0x70, 0x6c, 0x43, 0x6d, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x05, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x61, 0x66, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x73, 0x61, 0x66, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x22, 0x38, 0x0a, 0x12, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68,
	0x47, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x22, 0x41, 0x0a, 0x13, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x47, 0x75, 0x65, 0x73, 0x74,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x73, 0x22, 0x56, 0x0a, 0x13, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x47, 0x75,
	0x65, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1b,
	0x0a, 0x09, 0x65, 0x78, 0x69, 0x74, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x65, 0x78, 0x69, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x32, 0xa0, 0x05, 0x0a, 0x0a,
	0x59, 0x61, 0x76, 0x69, 0x72, 0x74, 0x64, 0x52, 0x50, 0x43, 0x12, 0x2a, 0x0a, 0x04, 0x50, 0x69,
	0x6e, 0x67, 0x12, 0x0c, 0x2e, 0x79, 0x61, 0x76, 0x70, 0x62, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x1a, 0x12, 0x2e, 0x79, 0x61, 0x76, 0x70, 0x62, 0x2e, 0x50, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x22, 0x00, 0x12, 0x2d, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x0c, 0x2e, 0x79, 0x61, 0x76, 0x70, 0x62, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a,
	0x12, 0x2e, 0x79, 0x61, 0x76, 0x70, 0x62, 0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x22, 0x00, 0x12, 0x3c, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x47, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x16, 0x2e, 0x79, 0x61, 0x76, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x75, 0x65,
	0x73, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x16, 0x2e, 0x79, 0x61, 0x76, 0x70,
	0x62, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x22, 0x00, 0x12, 0x44, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x47, 0x75, 0x65, 0x73, 0x74, 0x55,
	0x55, 0x49, 0x44, 0x12, 0x16, 0x2e, 0x79, 0x61, 0x76, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x47,
	0x75, 0x65, 0x73, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x1a, 0x2e, 0x79, 0x61,
	0x76, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x75, 0x65, 0x73, 0x74, 0x55, 0x55, 0x49, 0x44,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x00, 0x12, 0x45, 0x0a, 0x0b, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x47, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x2e, 0x79, 0x61, 0x76, 0x70, 0x62,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x75, 0x65, 0x73, 0x74, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x1a, 0x19, 0x2e, 0x79, 0x61, 0x76, 0x70, 0x62, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x47, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x00,
	0x12, 0x48, 0x0a, 0x0c, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x47, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1a, 0x2e, 0x79, 0x61, 0x76, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x47, 0x75, 0x65, 0x73, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x1a, 0x2e, 0x79,
	0x61, 0x76, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x47, 0x75, 0x65, 0x73,
	0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x00, 0x12, 0x49, 0x0a, 0x0b, 0x41, 0x74,
	0x74, 0x61, 0x63, 0x68, 0x47, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x2e, 0x79, 0x61, 0x76, 0x70,
	0x62, 0x2e, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x47, 0x75, 0x65, 0x73, 0x74, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x19, 0x2e, 0x79, 0x61, 0x76, 0x70, 0x62, 0x2e, 0x41, 0x74, 0x74,
	0x61, 0x63, 0x68, 0x47, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22,
	0x00, 0x28, 0x01, 0x30, 0x01, 0x12, 0x48, 0x0a, 0x0c, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65,
	0x47, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x2e, 0x79, 0x61, 0x76, 0x70, 0x62, 0x2e, 0x45, 0x78,
	0x65, 0x63, 0x75, 0x74, 0x65, 0x47, 0x75, 0x65, 0x73, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x1a, 0x1a, 0x2e, 0x79, 0x61, 0x76, 0x70, 0x62, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74,
	0x65, 0x47, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x00, 0x12,
	0x46, 0x0a, 0x0b, 0x52, 0x65, 0x73, 0x69, 0x7a, 0x65, 0x47, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19,
	0x2e, 0x79, 0x61, 0x76, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x69, 0x7a, 0x65, 0x47, 0x75, 0x65,
	0x73, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x1a, 0x2e, 0x79, 0x61, 0x76, 0x70,
	0x62, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x47, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x00, 0x12, 0x45, 0x0a, 0x0c, 0x43, 0x61, 0x70, 0x74, 0x75,
	0x72, 0x65, 0x47, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x2e, 0x79, 0x61, 0x76, 0x70, 0x62, 0x2e,
	0x43, 0x61, 0x70, 0x74, 0x75, 0x72, 0x65, 0x47, 0x75, 0x65, 0x73, 0x74, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x1a, 0x17, 0x2e, 0x79, 0x61, 0x76, 0x70, 0x62, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x00, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_grpc_gen_yavirtd_proto_rawDescOnce sync.Once
	file_grpc_gen_yavirtd_proto_rawDescData = file_grpc_gen_yavirtd_proto_rawDesc
)

func file_grpc_gen_yavirtd_proto_rawDescGZIP() []byte {
	file_grpc_gen_yavirtd_proto_rawDescOnce.Do(func() {
		file_grpc_gen_yavirtd_proto_rawDescData = protoimpl.X.CompressGZIP(file_grpc_gen_yavirtd_proto_rawDescData)
	})
	return file_grpc_gen_yavirtd_proto_rawDescData
}

var file_grpc_gen_yavirtd_proto_msgTypes = make([]protoimpl.MessageInfo, 22)
var file_grpc_gen_yavirtd_proto_goTypes = []interface{}{
	(*Empty)(nil),               // 0: yavpb.Empty
	(*CaptureGuestOptions)(nil), // 1: yavpb.CaptureGuestOptions
	(*UserImageMessage)(nil),    // 2: yavpb.UserImageMessage
	(*PingMessage)(nil),         // 3: yavpb.PingMessage
	(*InfoMessage)(nil),         // 4: yavpb.InfoMessage
	(*GetGuestOptions)(nil),     // 5: yavpb.GetGuestOptions
	(*GetGuestMessage)(nil),     // 6: yavpb.GetGuestMessage
	(*GetGuestUUIDMessage)(nil), // 7: yavpb.GetGuestUUIDMessage
	(*CreateGuestOptions)(nil),  // 8: yavpb.CreateGuestOptions
	(*ResizeGuestOptions)(nil),  // 9: yavpb.ResizeGuestOptions
	(*CreateGuestMessage)(nil),  // 10: yavpb.CreateGuestMessage
	(*ControlGuestOptions)(nil), // 11: yavpb.ControlGuestOptions
	(*ControlGuestMessage)(nil), // 12: yavpb.ControlGuestMessage
	(*AttachGuestOptions)(nil),  // 13: yavpb.AttachGuestOptions
	(*AttachGuestMessage)(nil),  // 14: yavpb.AttachGuestMessage
	(*ExecuteGuestOptions)(nil), // 15: yavpb.ExecuteGuestOptions
	(*ExecuteGuestMessage)(nil), // 16: yavpb.ExecuteGuestMessage
	nil,                         // 17: yavpb.GetGuestMessage.NetworksEntry
	nil,                         // 18: yavpb.CreateGuestOptions.VolumesEntry
	nil,                         // 19: yavpb.CreateGuestOptions.LabelsEntry
	nil,                         // 20: yavpb.ResizeGuestOptions.VolumesEntry
	nil,                         // 21: yavpb.CreateGuestMessage.NetworksEntry
}
var file_grpc_gen_yavirtd_proto_depIdxs = []int32{
	17, // 0: yavpb.GetGuestMessage.networks:type_name -> yavpb.GetGuestMessage.NetworksEntry
	18, // 1: yavpb.CreateGuestOptions.volumes:type_name -> yavpb.CreateGuestOptions.VolumesEntry
	19, // 2: yavpb.CreateGuestOptions.labels:type_name -> yavpb.CreateGuestOptions.LabelsEntry
	20, // 3: yavpb.ResizeGuestOptions.volumes:type_name -> yavpb.ResizeGuestOptions.VolumesEntry
	21, // 4: yavpb.CreateGuestMessage.networks:type_name -> yavpb.CreateGuestMessage.NetworksEntry
	0,  // 5: yavpb.YavirtdRPC.Ping:input_type -> yavpb.Empty
	0,  // 6: yavpb.YavirtdRPC.GetInfo:input_type -> yavpb.Empty
	5,  // 7: yavpb.YavirtdRPC.GetGuest:input_type -> yavpb.GetGuestOptions
	5,  // 8: yavpb.YavirtdRPC.GetGuestUUID:input_type -> yavpb.GetGuestOptions
	8,  // 9: yavpb.YavirtdRPC.CreateGuest:input_type -> yavpb.CreateGuestOptions
	11, // 10: yavpb.YavirtdRPC.ControlGuest:input_type -> yavpb.ControlGuestOptions
	13, // 11: yavpb.YavirtdRPC.AttachGuest:input_type -> yavpb.AttachGuestOptions
	15, // 12: yavpb.YavirtdRPC.ExecuteGuest:input_type -> yavpb.ExecuteGuestOptions
	9,  // 13: yavpb.YavirtdRPC.ResizeGuest:input_type -> yavpb.ResizeGuestOptions
	1,  // 14: yavpb.YavirtdRPC.CaptureGuest:input_type -> yavpb.CaptureGuestOptions
	3,  // 15: yavpb.YavirtdRPC.Ping:output_type -> yavpb.PingMessage
	4,  // 16: yavpb.YavirtdRPC.GetInfo:output_type -> yavpb.InfoMessage
	6,  // 17: yavpb.YavirtdRPC.GetGuest:output_type -> yavpb.GetGuestMessage
	7,  // 18: yavpb.YavirtdRPC.GetGuestUUID:output_type -> yavpb.GetGuestUUIDMessage
	10, // 19: yavpb.YavirtdRPC.CreateGuest:output_type -> yavpb.CreateGuestMessage
	12, // 20: yavpb.YavirtdRPC.ControlGuest:output_type -> yavpb.ControlGuestMessage
	14, // 21: yavpb.YavirtdRPC.AttachGuest:output_type -> yavpb.AttachGuestMessage
	16, // 22: yavpb.YavirtdRPC.ExecuteGuest:output_type -> yavpb.ExecuteGuestMessage
	12, // 23: yavpb.YavirtdRPC.ResizeGuest:output_type -> yavpb.ControlGuestMessage
	2,  // 24: yavpb.YavirtdRPC.CaptureGuest:output_type -> yavpb.UserImageMessage
	15, // [15:25] is the sub-list for method output_type
	5,  // [5:15] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_grpc_gen_yavirtd_proto_init() }
func file_grpc_gen_yavirtd_proto_init() {
	if File_grpc_gen_yavirtd_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_grpc_gen_yavirtd_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_gen_yavirtd_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CaptureGuestOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_gen_yavirtd_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserImageMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_gen_yavirtd_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PingMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_gen_yavirtd_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InfoMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_gen_yavirtd_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGuestOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_gen_yavirtd_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGuestMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_gen_yavirtd_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGuestUUIDMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_gen_yavirtd_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateGuestOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_gen_yavirtd_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResizeGuestOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_gen_yavirtd_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateGuestMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_gen_yavirtd_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ControlGuestOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_gen_yavirtd_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ControlGuestMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_gen_yavirtd_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AttachGuestOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_gen_yavirtd_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AttachGuestMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_gen_yavirtd_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecuteGuestOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_gen_yavirtd_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecuteGuestMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_grpc_gen_yavirtd_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   22,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_grpc_gen_yavirtd_proto_goTypes,
		DependencyIndexes: file_grpc_gen_yavirtd_proto_depIdxs,
		MessageInfos:      file_grpc_gen_yavirtd_proto_msgTypes,
	}.Build()
	File_grpc_gen_yavirtd_proto = out.File
	file_grpc_gen_yavirtd_proto_rawDesc = nil
	file_grpc_gen_yavirtd_proto_goTypes = nil
	file_grpc_gen_yavirtd_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// YavirtdRPCClient is the client API for YavirtdRPC service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type YavirtdRPCClient interface {
	Ping(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*PingMessage, error)
	GetInfo(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*InfoMessage, error)
	GetGuest(ctx context.Context, in *GetGuestOptions, opts ...grpc.CallOption) (*GetGuestMessage, error)
	GetGuestUUID(ctx context.Context, in *GetGuestOptions, opts ...grpc.CallOption) (*GetGuestUUIDMessage, error)
	CreateGuest(ctx context.Context, in *CreateGuestOptions, opts ...grpc.CallOption) (*CreateGuestMessage, error)
	ControlGuest(ctx context.Context, in *ControlGuestOptions, opts ...grpc.CallOption) (*ControlGuestMessage, error)
	AttachGuest(ctx context.Context, opts ...grpc.CallOption) (YavirtdRPC_AttachGuestClient, error)
	ExecuteGuest(ctx context.Context, in *ExecuteGuestOptions, opts ...grpc.CallOption) (*ExecuteGuestMessage, error)
	ResizeGuest(ctx context.Context, in *ResizeGuestOptions, opts ...grpc.CallOption) (*ControlGuestMessage, error)
	CaptureGuest(ctx context.Context, in *CaptureGuestOptions, opts ...grpc.CallOption) (*UserImageMessage, error)
}

type yavirtdRPCClient struct {
	cc grpc.ClientConnInterface
}

func NewYavirtdRPCClient(cc grpc.ClientConnInterface) YavirtdRPCClient {
	return &yavirtdRPCClient{cc}
}

func (c *yavirtdRPCClient) Ping(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*PingMessage, error) {
	out := new(PingMessage)
	err := c.cc.Invoke(ctx, "/yavpb.YavirtdRPC/Ping", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *yavirtdRPCClient) GetInfo(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*InfoMessage, error) {
	out := new(InfoMessage)
	err := c.cc.Invoke(ctx, "/yavpb.YavirtdRPC/GetInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *yavirtdRPCClient) GetGuest(ctx context.Context, in *GetGuestOptions, opts ...grpc.CallOption) (*GetGuestMessage, error) {
	out := new(GetGuestMessage)
	err := c.cc.Invoke(ctx, "/yavpb.YavirtdRPC/GetGuest", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *yavirtdRPCClient) GetGuestUUID(ctx context.Context, in *GetGuestOptions, opts ...grpc.CallOption) (*GetGuestUUIDMessage, error) {
	out := new(GetGuestUUIDMessage)
	err := c.cc.Invoke(ctx, "/yavpb.YavirtdRPC/GetGuestUUID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *yavirtdRPCClient) CreateGuest(ctx context.Context, in *CreateGuestOptions, opts ...grpc.CallOption) (*CreateGuestMessage, error) {
	out := new(CreateGuestMessage)
	err := c.cc.Invoke(ctx, "/yavpb.YavirtdRPC/CreateGuest", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *yavirtdRPCClient) ControlGuest(ctx context.Context, in *ControlGuestOptions, opts ...grpc.CallOption) (*ControlGuestMessage, error) {
	out := new(ControlGuestMessage)
	err := c.cc.Invoke(ctx, "/yavpb.YavirtdRPC/ControlGuest", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *yavirtdRPCClient) AttachGuest(ctx context.Context, opts ...grpc.CallOption) (YavirtdRPC_AttachGuestClient, error) {
	stream, err := c.cc.NewStream(ctx, &_YavirtdRPC_serviceDesc.Streams[0], "/yavpb.YavirtdRPC/AttachGuest", opts...)
	if err != nil {
		return nil, err
	}
	x := &yavirtdRPCAttachGuestClient{stream}
	return x, nil
}

type YavirtdRPC_AttachGuestClient interface {
	Send(*AttachGuestOptions) error
	Recv() (*AttachGuestMessage, error)
	grpc.ClientStream
}

type yavirtdRPCAttachGuestClient struct {
	grpc.ClientStream
}

func (x *yavirtdRPCAttachGuestClient) Send(m *AttachGuestOptions) error {
	return x.ClientStream.SendMsg(m)
}

func (x *yavirtdRPCAttachGuestClient) Recv() (*AttachGuestMessage, error) {
	m := new(AttachGuestMessage)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *yavirtdRPCClient) ExecuteGuest(ctx context.Context, in *ExecuteGuestOptions, opts ...grpc.CallOption) (*ExecuteGuestMessage, error) {
	out := new(ExecuteGuestMessage)
	err := c.cc.Invoke(ctx, "/yavpb.YavirtdRPC/ExecuteGuest", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *yavirtdRPCClient) ResizeGuest(ctx context.Context, in *ResizeGuestOptions, opts ...grpc.CallOption) (*ControlGuestMessage, error) {
	out := new(ControlGuestMessage)
	err := c.cc.Invoke(ctx, "/yavpb.YavirtdRPC/ResizeGuest", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *yavirtdRPCClient) CaptureGuest(ctx context.Context, in *CaptureGuestOptions, opts ...grpc.CallOption) (*UserImageMessage, error) {
	out := new(UserImageMessage)
	err := c.cc.Invoke(ctx, "/yavpb.YavirtdRPC/CaptureGuest", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// YavirtdRPCServer is the server API for YavirtdRPC service.
type YavirtdRPCServer interface {
	Ping(context.Context, *Empty) (*PingMessage, error)
	GetInfo(context.Context, *Empty) (*InfoMessage, error)
	GetGuest(context.Context, *GetGuestOptions) (*GetGuestMessage, error)
	GetGuestUUID(context.Context, *GetGuestOptions) (*GetGuestUUIDMessage, error)
	CreateGuest(context.Context, *CreateGuestOptions) (*CreateGuestMessage, error)
	ControlGuest(context.Context, *ControlGuestOptions) (*ControlGuestMessage, error)
	AttachGuest(YavirtdRPC_AttachGuestServer) error
	ExecuteGuest(context.Context, *ExecuteGuestOptions) (*ExecuteGuestMessage, error)
	ResizeGuest(context.Context, *ResizeGuestOptions) (*ControlGuestMessage, error)
	CaptureGuest(context.Context, *CaptureGuestOptions) (*UserImageMessage, error)
}

// UnimplementedYavirtdRPCServer can be embedded to have forward compatible implementations.
type UnimplementedYavirtdRPCServer struct {
}

func (*UnimplementedYavirtdRPCServer) Ping(context.Context, *Empty) (*PingMessage, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Ping not implemented")
}
func (*UnimplementedYavirtdRPCServer) GetInfo(context.Context, *Empty) (*InfoMessage, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetInfo not implemented")
}
func (*UnimplementedYavirtdRPCServer) GetGuest(context.Context, *GetGuestOptions) (*GetGuestMessage, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetGuest not implemented")
}
func (*UnimplementedYavirtdRPCServer) GetGuestUUID(context.Context, *GetGuestOptions) (*GetGuestUUIDMessage, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetGuestUUID not implemented")
}
func (*UnimplementedYavirtdRPCServer) CreateGuest(context.Context, *CreateGuestOptions) (*CreateGuestMessage, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateGuest not implemented")
}
func (*UnimplementedYavirtdRPCServer) ControlGuest(context.Context, *ControlGuestOptions) (*ControlGuestMessage, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ControlGuest not implemented")
}
func (*UnimplementedYavirtdRPCServer) AttachGuest(YavirtdRPC_AttachGuestServer) error {
	return status.Errorf(codes.Unimplemented, "method AttachGuest not implemented")
}
func (*UnimplementedYavirtdRPCServer) ExecuteGuest(context.Context, *ExecuteGuestOptions) (*ExecuteGuestMessage, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ExecuteGuest not implemented")
}
func (*UnimplementedYavirtdRPCServer) ResizeGuest(context.Context, *ResizeGuestOptions) (*ControlGuestMessage, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ResizeGuest not implemented")
}
func (*UnimplementedYavirtdRPCServer) CaptureGuest(context.Context, *CaptureGuestOptions) (*UserImageMessage, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CaptureGuest not implemented")
}

func RegisterYavirtdRPCServer(s *grpc.Server, srv YavirtdRPCServer) {
	s.RegisterService(&_YavirtdRPC_serviceDesc, srv)
}

func _YavirtdRPC_Ping_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(YavirtdRPCServer).Ping(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yavpb.YavirtdRPC/Ping",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(YavirtdRPCServer).Ping(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _YavirtdRPC_GetInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(YavirtdRPCServer).GetInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yavpb.YavirtdRPC/GetInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(YavirtdRPCServer).GetInfo(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _YavirtdRPC_GetGuest_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetGuestOptions)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(YavirtdRPCServer).GetGuest(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yavpb.YavirtdRPC/GetGuest",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(YavirtdRPCServer).GetGuest(ctx, req.(*GetGuestOptions))
	}
	return interceptor(ctx, in, info, handler)
}

func _YavirtdRPC_GetGuestUUID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetGuestOptions)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(YavirtdRPCServer).GetGuestUUID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yavpb.YavirtdRPC/GetGuestUUID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(YavirtdRPCServer).GetGuestUUID(ctx, req.(*GetGuestOptions))
	}
	return interceptor(ctx, in, info, handler)
}

func _YavirtdRPC_CreateGuest_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateGuestOptions)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(YavirtdRPCServer).CreateGuest(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yavpb.YavirtdRPC/CreateGuest",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(YavirtdRPCServer).CreateGuest(ctx, req.(*CreateGuestOptions))
	}
	return interceptor(ctx, in, info, handler)
}

func _YavirtdRPC_ControlGuest_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ControlGuestOptions)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(YavirtdRPCServer).ControlGuest(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yavpb.YavirtdRPC/ControlGuest",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(YavirtdRPCServer).ControlGuest(ctx, req.(*ControlGuestOptions))
	}
	return interceptor(ctx, in, info, handler)
}

func _YavirtdRPC_AttachGuest_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(YavirtdRPCServer).AttachGuest(&yavirtdRPCAttachGuestServer{stream})
}

type YavirtdRPC_AttachGuestServer interface {
	Send(*AttachGuestMessage) error
	Recv() (*AttachGuestOptions, error)
	grpc.ServerStream
}

type yavirtdRPCAttachGuestServer struct {
	grpc.ServerStream
}

func (x *yavirtdRPCAttachGuestServer) Send(m *AttachGuestMessage) error {
	return x.ServerStream.SendMsg(m)
}

func (x *yavirtdRPCAttachGuestServer) Recv() (*AttachGuestOptions, error) {
	m := new(AttachGuestOptions)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _YavirtdRPC_ExecuteGuest_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ExecuteGuestOptions)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(YavirtdRPCServer).ExecuteGuest(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yavpb.YavirtdRPC/ExecuteGuest",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(YavirtdRPCServer).ExecuteGuest(ctx, req.(*ExecuteGuestOptions))
	}
	return interceptor(ctx, in, info, handler)
}

func _YavirtdRPC_ResizeGuest_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ResizeGuestOptions)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(YavirtdRPCServer).ResizeGuest(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yavpb.YavirtdRPC/ResizeGuest",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(YavirtdRPCServer).ResizeGuest(ctx, req.(*ResizeGuestOptions))
	}
	return interceptor(ctx, in, info, handler)
}

func _YavirtdRPC_CaptureGuest_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CaptureGuestOptions)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(YavirtdRPCServer).CaptureGuest(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yavpb.YavirtdRPC/CaptureGuest",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(YavirtdRPCServer).CaptureGuest(ctx, req.(*CaptureGuestOptions))
	}
	return interceptor(ctx, in, info, handler)
}

var _YavirtdRPC_serviceDesc = grpc.ServiceDesc{
	ServiceName: "yavpb.YavirtdRPC",
	HandlerType: (*YavirtdRPCServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Ping",
			Handler:    _YavirtdRPC_Ping_Handler,
		},
		{
			MethodName: "GetInfo",
			Handler:    _YavirtdRPC_GetInfo_Handler,
		},
		{
			MethodName: "GetGuest",
			Handler:    _YavirtdRPC_GetGuest_Handler,
		},
		{
			MethodName: "GetGuestUUID",
			Handler:    _YavirtdRPC_GetGuestUUID_Handler,
		},
		{
			MethodName: "CreateGuest",
			Handler:    _YavirtdRPC_CreateGuest_Handler,
		},
		{
			MethodName: "ControlGuest",
			Handler:    _YavirtdRPC_ControlGuest_Handler,
		},
		{
			MethodName: "ExecuteGuest",
			Handler:    _YavirtdRPC_ExecuteGuest_Handler,
		},
		{
			MethodName: "ResizeGuest",
			Handler:    _YavirtdRPC_ResizeGuest_Handler,
		},
		{
			MethodName: "CaptureGuest",
			Handler:    _YavirtdRPC_CaptureGuest_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "AttachGuest",
			Handler:       _YavirtdRPC_AttachGuest_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "grpc/gen/yavirtd.proto",
}
